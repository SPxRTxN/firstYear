import vk_api
import requests
import json
import time
import python3_anticaptcha
import random
import threading
from python3_anticaptcha import ImageToTextTask, errors
import pytz
from datetime import datetime

def captcha_handler(captcha):
	key = ImageToTextTask.ImageToTextTask(anticaptcha_key="key", save_format='const').captcha_handler(captcha_link=captcha.get_url())
	return captcha.try_again(key['solution']['text'])

vk = vk_api.VkApi(token = "token", captcha_handler=captcha_handler)
vk._auth_token()
api = vk.get_api()

id = "-182725650" #–Ω–µ —Ç—Ä–æ–≥–∞—Ç—å
buy = 0 #–Ω–µ —Ç—Ä–æ–≥–∞—Ç—å
n = 0
sila = int(2499999) #—É–∫–∞–∂–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å–∏–ª—É –ø—Ä–æ–ø—É—Å–∫–∞

#########–ù–ï –¢–†–û–ì–ê–¢–¨########
nov = 3765000000
buv = 376500000
opt = 37650000
vet = 3765000
ybi = 376500
chi = 37650
#########–ù–ï –¢–†–û–ì–ê–¢–¨########

times = 1

while True:
	hod = 0
	while hod == 0:
		text = api.messages.getHistory(count = 1, peer_id = id)['items'][0]['text']
		moch = int(text.split('üî± –°–∏–ª–∞ –±–æ–π—Ü–æ–≤: ')[-1].split('–µ–¥.')[0])
		a = sila-moch
		print('—è –≤ —Ü–∏–∫–ª–µ —Ä–∞–∑–≤–µ–¥–∫–∏')
		if int(moch) <= 1000000: #–º–µ–Ω—å—à–µ
			api.messages.send(peer_id=id, message=f'üíÄ –ü–æ–∫–∏–Ω—É—Ç—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—é', random_id=0, payload = json.dumps({"button":"2"}))
			n += 1
			print(f" #{n} | –¢–µ–∫—É—â–∞—è —Å–∏–ª–∞: {moch} | –ù–∞–¥–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å: {a} ")
			hod = 1
			time.sleep(5)
		else: #–±–æ–ª—å—à–µ
			for i in range(5):
				print(f" #{n} | –ò–¥—É –≤ —Ä–∞–∑–≤–µ–¥–∫—É | ")
				api.messages.send(peer_id=id, message=f'üî• –û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ–π—Ü–æ–≤ –Ω–∞ —Ä–∞–∑–≤–µ–¥–∫—É', random_id=0, payload = json.dumps({"button":"3"}))
				n += 1
				time.sleep(3)
			api.messages.send(peer_id=id, message=f'üèÉ‚Äç‚ôÇ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—É—Ç—å', random_id=0, payload = json.dumps({"button":"1"}))
			print(f" #{n} | –¢–µ–∫—É—â–∞—è —Å–∏–ª–∞: {moch} | –ù–∞–¥–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å: {a} ")
			n += 1
			continue
	while hod == 1:
		print('—è –≤ —Ü–∏–∫–ª–µ –ø–æ–∫—É–ø–∫–∏')
		text = api.messages.getHistory(count = 1, peer_id = id)['items'][0]['text']
		if "üë£ –í—ã –æ—Ç–æ–∑–≤–∞–ª–∏ –±–æ–π—Ü–æ–≤ –∏–∑ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏." in text:
			api.messages.send(peer_id=id, message=f'üë• –û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ–π—Ü–æ–≤ –∫–æ –≤—Ö–æ–¥—É –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä‚Ä¶', random_id=0, payload = json.dumps({"button":"1"}))
			print(f" #{n} |  –ò–¥—É –≤ –ø–æ–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ ")
			n += 1
		if "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ –≤—Ö–æ–¥—É –Ω–æ–≤–∏—á–∫–æ–≤ ‚è© üî± 1 –µ–¥." in text:
			api.messages.send(peer_id=id, message=f'üëº –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ –≤—Ö–æ–¥—É –Ω–æ–≤–∏—á–∫–æ–≤ ‚è© üî± 1 –µ–¥.', random_id=0, payload = json.dumps({"button":"1"}))
			print(f" #{n} |  –í—ã–±—Ä–∞–ª –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–æ–≤–∏—á–∫–æ–≤ ")
			n += 1
			buy = 1
		if "–û—Ç–ø—Ä–∞–≤—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–∏—á–∫–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—é" in text:
			api.messages.send(peer_id=id, message=f'{a}', random_id=0)#, payload = json.dumps({"button":"1"}))
			nov -= a
			print(f" #{n} |  –ö—É–ø–∏–ª {a} –Ω–æ–≤–∏—á–∫–æ–≤, –æ—Å—Ç–∞–ª–æ—Å—å {nov} ")
			n += 1
		if "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ –≤—Ö–æ–¥—É –Ω–æ–≤–∏—á–∫–æ–≤ ‚è© üî± 1 –µ–¥." in text and buy == 1:
			api.messages.send(peer_id=id, message=f'‚è™ –ù–∞–∑–∞–¥', random_id=0, payload = json.dumps({"button":"*"}))
			print(f" #{n} |  –í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –Ω–∞–∑–∞–¥ ")
			time.sleep(5)
			api.messages.send(peer_id=id, message=f'üåü –û—Ç–∫—Ä—ã—Ç—å –≤—Ö–æ–¥ –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—é', random_id=0, payload = json.dumps({"button":"2"}))
			print(f" #{n} |  –ü—Ä–æ–¥–æ–ª–∂–∞—é ")
			n += 1
			buy = 0
			hod = 0